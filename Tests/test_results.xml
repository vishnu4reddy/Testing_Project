<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="5" failures="8" skipped="3" tests="50" time="253.944" timestamp="2023-07-31T12:38:58.310313" hostname="BAN-LAP-VREDDY"><testcase classname="Tests.test_abcd" name="test_addition" time="0.002" /><testcase classname="Tests.test_abcd" name="test_sub" time="0.001" /><testcase classname="Tests.test_abcd" name="test_multi" time="0.001" /><testcase classname="Tests.test_abcd" name="test_division" time="0.001" /><testcase classname="Tests.test_basic_fixture" name="test_comparewithAA" time="0.001" /><testcase classname="Tests.test_basic_fixture" name="test_comparewithBB" time="0.001" /><testcase classname="Tests.test_basic_fixture" name="test_comparewithCC" time="0.001" /><testcase classname="Tests.test_browse" name="test_check_login[chromium]" time="5.403" /><testcase classname="Tests.test_codespace" name="test_check_login[chromium]" time="35.171"><failure message="playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.&#10;=========================== logs ===========================&#10;waiting for locator(&quot;xpath=//remote-clipboard-copy[@class='d-inline-block btn-octicon']&quot;)&#10;============================================================">page = &lt;Page url='https://github.com/vishnu4reddy/Post_Rolex_Linkedin_sel/blob/master/Tests/test_share_post.py'&gt;

    def test_check_login(page: Page):
        login_page = LoginPage(page)
        login_page.navigate()
        login_page.login(Email, password)
        login_page.repositories()
&gt;       login_page.test_files()

test_codespace.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
..\Libraries\github.py:57: in test_files
    self.copy_file.click()
..\..\Venvs\apple_test\lib\site-packages\playwright\sync_api\_generated.py:15688: in click
    self._sync(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_locator.py:160: in click
    return await self._frame.click(self._selector, strict=True, **params)
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_frame.py:489: in click
    await self._channel.send("click", locals_to_params(locals()))
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:61: in send
    return await self._connection.wrap_api_call(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:482: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Channel object at 0x00000171973C1C90&gt;, method = 'click'
params = {'selector': "//remote-clipboard-copy[@class='d-inline-block btn-octicon']", 'strict': True}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -&gt; Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(self._guid, method, params)
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
&gt;       result = next(iter(done)).result()
E       playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.
E       =========================== logs ===========================
E       waiting for locator("xpath=//remote-clipboard-copy[@class='d-inline-block btn-octicon']")
E       ============================================================

..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:97: TimeoutError</failure></testcase><testcase classname="Tests.test_configuration" name="test_check_login[chromium]" time="36.160"><failure message="playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.&#10;=========================== logs ===========================&#10;waiting for locator(&quot;xpath=//remote-clipboard-copy[@class='d-inline-block btn-octicon']&quot;)&#10;============================================================">page = &lt;Page url='https://github.com/vishnu4reddy/Post_Rolex_Linkedin_sel/blob/master/Tests/test_share_post.py'&gt;

    def test_check_login(page: Page):
        login_page = LoginPage(page)
        login_page.navigate()
        login_page.login(Email, password)
        login_page.repositories()
&gt;       login_page.test_files()

test_configuration.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
..\Libraries\github.py:57: in test_files
    self.copy_file.click()
..\..\Venvs\apple_test\lib\site-packages\playwright\sync_api\_generated.py:15688: in click
    self._sync(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_locator.py:160: in click
    return await self._frame.click(self._selector, strict=True, **params)
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_frame.py:489: in click
    await self._channel.send("click", locals_to_params(locals()))
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:61: in send
    return await self._connection.wrap_api_call(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:482: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Channel object at 0x0000017197652CB0&gt;, method = 'click'
params = {'selector': "//remote-clipboard-copy[@class='d-inline-block btn-octicon']", 'strict': True}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -&gt; Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(self._guid, method, params)
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
&gt;       result = next(iter(done)).result()
E       playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.
E       =========================== logs ===========================
E       waiting for locator("xpath=//remote-clipboard-copy[@class='d-inline-block btn-octicon']")
E       ============================================================

..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:97: TimeoutError</failure></testcase><testcase classname="Tests.test_copy_code" name="test_check_login[chromium]" time="35.863"><failure message="playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.&#10;=========================== logs ===========================&#10;waiting for locator(&quot;xpath=//remote-clipboard-copy[@class='d-inline-block btn-octicon']&quot;)&#10;============================================================">page = &lt;Page url='https://github.com/vishnu4reddy/Post_Rolex_Linkedin_sel/blob/master/Tests/test_share_post.py'&gt;

    def test_check_login(page: Page):
        login_page = LoginPage(page)
        login_page.navigate()
        login_page.login(Email, password)
        login_page.repositories()
&gt;       login_page.test_files()

test_copy_code.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
..\Libraries\github.py:57: in test_files
    self.copy_file.click()
..\..\Venvs\apple_test\lib\site-packages\playwright\sync_api\_generated.py:15688: in click
    self._sync(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_locator.py:160: in click
    return await self._frame.click(self._selector, strict=True, **params)
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_frame.py:489: in click
    await self._channel.send("click", locals_to_params(locals()))
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:61: in send
    return await self._connection.wrap_api_call(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:482: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Channel object at 0x0000017198FAFC10&gt;, method = 'click'
params = {'selector': "//remote-clipboard-copy[@class='d-inline-block btn-octicon']", 'strict': True}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -&gt; Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(self._guid, method, params)
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
&gt;       result = next(iter(done)).result()
E       playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.
E       =========================== logs ===========================
E       waiting for locator("xpath=//remote-clipboard-copy[@class='d-inline-block btn-octicon']")
E       ============================================================

..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:97: TimeoutError</failure></testcase><testcase classname="Tests.test_github" name="test_check_login[chromium]" time="36.125"><failure message="playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.&#10;=========================== logs ===========================&#10;waiting for locator(&quot;xpath=//remote-clipboard-copy[@class='d-inline-block btn-octicon']&quot;)&#10;============================================================">page = &lt;Page url='https://github.com/vishnu4reddy/Post_Rolex_Linkedin_sel/blob/master/Tests/test_share_post.py'&gt;

    def test_check_login(page: Page):
    
        login_page = LoginPage(page)
        login_page.navigate()
        login_page.login(Email, password)
        login_page.repositories()
&gt;       login_page.test_files()

test_github.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
..\Libraries\github.py:57: in test_files
    self.copy_file.click()
..\..\Venvs\apple_test\lib\site-packages\playwright\sync_api\_generated.py:15688: in click
    self._sync(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_locator.py:160: in click
    return await self._frame.click(self._selector, strict=True, **params)
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_frame.py:489: in click
    await self._channel.send("click", locals_to_params(locals()))
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:61: in send
    return await self._connection.wrap_api_call(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:482: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Channel object at 0x00000171975E5EA0&gt;, method = 'click'
params = {'selector': "//remote-clipboard-copy[@class='d-inline-block btn-octicon']", 'strict': True}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -&gt; Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(self._guid, method, params)
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
&gt;       result = next(iter(done)).result()
E       playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.
E       =========================== logs ===========================
E       waiting for locator("xpath=//remote-clipboard-copy[@class='d-inline-block btn-octicon']")
E       ============================================================

..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:97: TimeoutError</failure></testcase><testcase classname="Tests.test_login" name="test_check_login[chromium]" time="1.849" /><testcase classname="Tests.test_open_codespace" name="test_check_login[chromium]" time="36.927"><failure message="playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.&#10;=========================== logs ===========================&#10;waiting for locator(&quot;xpath=//remote-clipboard-copy[@class='d-inline-block btn-octicon']&quot;)&#10;============================================================">page = &lt;Page url='https://github.com/vishnu4reddy/Post_Rolex_Linkedin_sel/blob/master/Tests/test_share_post.py'&gt;

    def test_check_login(page: Page):
    
        login_page = LoginPage(page)
        login_page.navigate()
        login_page.login(Email, password)
        login_page.repositories()
&gt;       login_page.test_files()

test_open_codespace.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
..\Libraries\github.py:57: in test_files
    self.copy_file.click()
..\..\Venvs\apple_test\lib\site-packages\playwright\sync_api\_generated.py:15688: in click
    self._sync(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_locator.py:160: in click
    return await self._frame.click(self._selector, strict=True, **params)
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_frame.py:489: in click
    await self._channel.send("click", locals_to_params(locals()))
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:61: in send
    return await self._connection.wrap_api_call(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:482: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Channel object at 0x0000017197464DC0&gt;, method = 'click'
params = {'selector': "//remote-clipboard-copy[@class='d-inline-block btn-octicon']", 'strict': True}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -&gt; Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(self._guid, method, params)
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
&gt;       result = next(iter(done)).result()
E       playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.
E       =========================== logs ===========================
E       waiting for locator("xpath=//remote-clipboard-copy[@class='d-inline-block btn-octicon']")
E       ============================================================

..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:97: TimeoutError</failure></testcase><testcase classname="Tests.test_paste_code" name="test_check_login[chromium]" time="31.910"><failure message="playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.&#10;=========================== logs ===========================&#10;waiting for locator(&quot;xpath=(//button[@name='button'][normalize-space()='Show more'])[1]&quot;)&#10;  locator resolved to &lt;button name=&quot;button&quot; type=&quot;submit&quot; data-disable-with=&quot;L…&gt;↵      Show more↵&lt;/button&gt;&#10;attempting click action&#10;  waiting for element to be visible, enabled and stable&#10;    element is not visible - waiting...&#10;============================================================">page = &lt;Page url='https://github.com/'&gt;

    def test_check_login(page: Page):
    
        login_page = LoginPage(page)
        login_page.navigate()
        login_page.login(Email, password)
&gt;       login_page.repositories()

test_paste_code.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
..\Libraries\github.py:51: in repositories
    self.seemore.click()
..\..\Venvs\apple_test\lib\site-packages\playwright\sync_api\_generated.py:15688: in click
    self._sync(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_locator.py:160: in click
    return await self._frame.click(self._selector, strict=True, **params)
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_frame.py:489: in click
    await self._channel.send("click", locals_to_params(locals()))
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:61: in send
    return await self._connection.wrap_api_call(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:482: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Channel object at 0x0000017197629690&gt;, method = 'click'
params = {'selector': "(//button[@name='button'][normalize-space()='Show more'])[1]", 'strict': True}, return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -&gt; Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(self._guid, method, params)
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
&gt;       result = next(iter(done)).result()
E       playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.
E       =========================== logs ===========================
E       waiting for locator("xpath=(//button[@name='button'][normalize-space()='Show more'])[1]")
E         locator resolved to &lt;button name="button" type="submit" data-disable-with="L…&gt;↵      Show more↵&lt;/button&gt;
E       attempting click action
E         waiting for element to be visible, enabled and stable
E           element is not visible - waiting...
E       ============================================================

..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:97: TimeoutError</failure></testcase><testcase classname="Tests.test_sign_in" name="test_Sign_in[chromium]" time="30.147"><failure message="playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.&#10;=========================== logs ===========================&#10;waiting for frame_locator(&quot;iframe[name=\&quot;aid-auth-widget\&quot;]&quot;).get_by_label(&quot;Password&quot;)&#10;============================================================">page = &lt;Page url='about:blank'&gt;

    def test_Sign_in(page: Page):
&gt;       app_tester = AppTesting(page)

test_sign_in.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
..\Libraries\apple.py:20: in __init__
    "iframe[name=\"aid-auth-widget\"]").get_by_label("Password").fill(password)
..\..\Venvs\apple_test\lib\site-packages\playwright\sync_api\_generated.py:16055: in fill
    self._sync(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_locator.py:212: in fill
    return await self._frame.fill(self._selector, strict=True, **params)
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_frame.py:528: in fill
    await self._channel.send("fill", locals_to_params(locals()))
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:61: in send
    return await self._connection.wrap_api_call(
..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:482: in wrap_api_call
    return await cb()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Channel object at 0x000001719891FCA0&gt;, method = 'fill'
params = {'selector': 'iframe[name="aid-auth-widget"] &gt;&gt; internal:control=enter-frame &gt;&gt; internal:label="Password"i', 'strict': True, 'value': 'Chandra@12'}
return_as_dict = False

    async def inner_send(
        self, method: str, params: Optional[Dict], return_as_dict: bool
    ) -&gt; Any:
        if params is None:
            params = {}
        callback = self._connection._send_message_to_server(self._guid, method, params)
        if self._connection._error:
            error = self._connection._error
            self._connection._error = None
            raise error
        done, _ = await asyncio.wait(
            {
                self._connection._transport.on_error_future,
                callback.future,
            },
            return_when=asyncio.FIRST_COMPLETED,
        )
        if not callback.future.done():
            callback.future.cancel()
&gt;       result = next(iter(done)).result()
E       playwright._impl._api_types.TimeoutError: Timeout 30000ms exceeded.
E       =========================== logs ===========================
E       waiting for frame_locator("iframe[name=\"aid-auth-widget\"]").get_by_label("Password")
E       ============================================================

..\..\Venvs\apple_test\lib\site-packages\playwright\_impl\_connection.py:97: TimeoutError</failure></testcase><testcase classname="Tests.test_signin-1" name="test_check_login[chromium]" time="2.443" /><testcase classname="Tests.test_compare" name="test_greater" time="0.001"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="Tests.test_compare" name="test_greater_equal" time="0.001" /><testcase classname="Tests.test_compare" name="test_less" time="0.000"><skipped type="pytest.skip" message="unconditional skip">D:\Workspace\Practice\Testing_project\Tests\test_compare.py:18: unconditional skip</skipped></testcase><testcase classname="Tests.test_depend" name="test_a" time="0.001"><skipped type="pytest.xfail" message="deliberate fail" /></testcase><testcase classname="Tests.test_depend" name="test_b" time="0.001" /><testcase classname="Tests.test_depend" name="test_c" time="0.000" /><testcase classname="Tests.test_depend" name="test_d" time="0.000" /><testcase classname="Tests.test_depend" name="test_e" time="0.000" /><testcase classname="Tests.test_div_by_13" name="test_divisible_by_13" time="0.001"><error message="failed on setup with &quot;file D:\Workspace\Practice\Testing_project\Tests\test_div_by_13.py, line 4&#10;  def test_divisible_by_13(input_value):&#10;E       fixture 'input_value' not found&#10;&gt;       available fixtures: _testinfra_host, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, device, doctest_namespace, extra, host, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, metadata, monkeypatch, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, worker_id&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;D:\Workspace\Practice\Testing_project\Tests\test_div_by_13.py:4&quot;">file D:\Workspace\Practice\Testing_project\Tests\test_div_by_13.py, line 4
  def test_divisible_by_13(input_value):
E       fixture 'input_value' not found
&gt;       available fixtures: _testinfra_host, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, device, doctest_namespace, extra, host, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, metadata, monkeypatch, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, worker_id
&gt;       use 'pytest --fixtures [testpath]' for help on them.

D:\Workspace\Practice\Testing_project\Tests\test_div_by_13.py:4</error></testcase><testcase classname="Tests.test_div_by_3_6" name="test_divisible_by_3" time="0.001"><error message="failed on setup with &quot;file D:\Workspace\Practice\Testing_project\Tests\test_div_by_3_6.py, line 4&#10;  def test_divisible_by_3(input_value):&#10;E       fixture 'input_value' not found&#10;&gt;       available fixtures: _testinfra_host, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, device, doctest_namespace, extra, host, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, metadata, monkeypatch, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, worker_id&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;D:\Workspace\Practice\Testing_project\Tests\test_div_by_3_6.py:4&quot;">file D:\Workspace\Practice\Testing_project\Tests\test_div_by_3_6.py, line 4
  def test_divisible_by_3(input_value):
E       fixture 'input_value' not found
&gt;       available fixtures: _testinfra_host, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, device, doctest_namespace, extra, host, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, metadata, monkeypatch, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, worker_id
&gt;       use 'pytest --fixtures [testpath]' for help on them.

D:\Workspace\Practice\Testing_project\Tests\test_div_by_3_6.py:4</error></testcase><testcase classname="Tests.test_div_by_3_6" name="test_divisible_by_6" time="0.001"><error message="failed on setup with &quot;file D:\Workspace\Practice\Testing_project\Tests\test_div_by_3_6.py, line 8&#10;  def test_divisible_by_6(input_value):&#10;E       fixture 'input_value' not found&#10;&gt;       available fixtures: _testinfra_host, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, device, doctest_namespace, extra, host, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, metadata, monkeypatch, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, worker_id&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;D:\Workspace\Practice\Testing_project\Tests\test_div_by_3_6.py:8&quot;">file D:\Workspace\Practice\Testing_project\Tests\test_div_by_3_6.py, line 8
  def test_divisible_by_6(input_value):
E       fixture 'input_value' not found
&gt;       available fixtures: _testinfra_host, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, device, doctest_namespace, extra, host, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, metadata, monkeypatch, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, worker_id
&gt;       use 'pytest --fixtures [testpath]' for help on them.

D:\Workspace\Practice\Testing_project\Tests\test_div_by_3_6.py:8</error></testcase><testcase classname="Tests.test_failure" name="test_sqrt_failure" time="0.001" /><testcase classname="Tests.test_failure" name="test_square_failure" time="0.000" /><testcase classname="Tests.test_failure" name="test_equality_failure" time="0.000" /><testcase classname="Tests.test_letsdo" name="test_class2" time="0.001" /><testcase classname="Tests.test_multi_11" name="test_multiplication_11[1-11]" time="0.001" /><testcase classname="Tests.test_multi_11" name="test_multiplication_11[2-22]" time="0.001" /><testcase classname="Tests.test_multi_11" name="test_multiplication_11[3-33]" time="0.001" /><testcase classname="Tests.test_multi_11" name="test_multiplication_11[4-44]" time="0.001" /><testcase classname="Tests.test_paramas" name="test_fixture_param[1]" time="0.001" /><testcase classname="Tests.test_paramas" name="test_fixture_param[2]" time="0.001" /><testcase classname="Tests.test_paramas" name="test_fixture_param[3]" time="0.001" /><testcase classname="Tests.test_put" name="test_version2_fail" time="0.001" /><testcase classname="Tests.test_skipif" name="test_skip_dynamic" time="0.001"><failure message="assert False">def test_skip_dynamic():
        if is_condition_met():
            pytest.skip("Skipping test because the condition is not met.")
&gt;       assert False  # This test won't be executed if the condition is met
E       assert False

test_skipif.py:12: AssertionError</failure></testcase><testcase classname="Tests.test_some" name="test_class2" time="0.002" /><testcase classname="Tests.test_square" name="test_sqrt" time="0.001" /><testcase classname="Tests.test_square" name="testsquare" time="0.000" /><testcase classname="Tests.test_square" name="test_equality" time="0.000" /><testcase classname="Tests.test_upper" name="test_capital_case" time="0.001" /><testcase classname="Tests.test_wallet" name="test_func1" time="0.015"><error message="failed on setup with &quot;TypeError: not all arguments converted during string formatting&quot;">function = &lt;function test_func1 at 0x000001719700DA20&gt;

    def setup_function(function):
&gt;       logging.info("setting up", function)

test_wallet.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
C:\Program Files\Python310\lib\logging\__init__.py:2138: in info
    root.info(msg, *args, **kwargs)
C:\Program Files\Python310\lib\logging\__init__.py:1477: in info
    self._log(INFO, msg, args, **kwargs)
C:\Program Files\Python310\lib\logging\__init__.py:1624: in _log
    self.handle(record)
C:\Program Files\Python310\lib\logging\__init__.py:1634: in handle
    self.callHandlers(record)
C:\Program Files\Python310\lib\logging\__init__.py:1696: in callHandlers
    hdlr.handle(record)
C:\Program Files\Python310\lib\logging\__init__.py:968: in handle
    self.emit(record)
..\..\Venvs\apple_test\lib\site-packages\_pytest\logging.py:342: in emit
    super().emit(record)
C:\Program Files\Python310\lib\logging\__init__.py:1108: in emit
    self.handleError(record)
C:\Program Files\Python310\lib\logging\__init__.py:1100: in emit
    msg = self.format(record)
C:\Program Files\Python310\lib\logging\__init__.py:943: in format
    return fmt.format(record)
..\..\Venvs\apple_test\lib\site-packages\_pytest\logging.py:113: in format
    return super().format(record)
C:\Program Files\Python310\lib\logging\__init__.py:678: in format
    record.message = record.getMessage()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;LogRecord: root, 20, D:\Workspace\Practice\Testing_project\Tests\test_wallet.py, 6, "setting up"&gt;

    def getMessage(self):
        """
        Return the message for this LogRecord.
    
        Return the message for this LogRecord after merging any user-supplied
        arguments with the message.
        """
        msg = str(self.msg)
        if self.args:
&gt;           msg = msg % self.args
E           TypeError: not all arguments converted during string formatting

C:\Program Files\Python310\lib\logging\__init__.py:368: TypeError</error></testcase><testcase classname="Tests.test_wallet" name="test_func2" time="0.004"><error message="failed on setup with &quot;TypeError: not all arguments converted during string formatting&quot;">function = &lt;function test_func2 at 0x000001719700DAB0&gt;

    def setup_function(function):
&gt;       logging.info("setting up", function)

test_wallet.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
C:\Program Files\Python310\lib\logging\__init__.py:2138: in info
    root.info(msg, *args, **kwargs)
C:\Program Files\Python310\lib\logging\__init__.py:1477: in info
    self._log(INFO, msg, args, **kwargs)
C:\Program Files\Python310\lib\logging\__init__.py:1624: in _log
    self.handle(record)
C:\Program Files\Python310\lib\logging\__init__.py:1634: in handle
    self.callHandlers(record)
C:\Program Files\Python310\lib\logging\__init__.py:1696: in callHandlers
    hdlr.handle(record)
C:\Program Files\Python310\lib\logging\__init__.py:968: in handle
    self.emit(record)
..\..\Venvs\apple_test\lib\site-packages\_pytest\logging.py:342: in emit
    super().emit(record)
C:\Program Files\Python310\lib\logging\__init__.py:1108: in emit
    self.handleError(record)
C:\Program Files\Python310\lib\logging\__init__.py:1100: in emit
    msg = self.format(record)
C:\Program Files\Python310\lib\logging\__init__.py:943: in format
    return fmt.format(record)
..\..\Venvs\apple_test\lib\site-packages\_pytest\logging.py:113: in format
    return super().format(record)
C:\Program Files\Python310\lib\logging\__init__.py:678: in format
    record.message = record.getMessage()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;LogRecord: root, 20, D:\Workspace\Practice\Testing_project\Tests\test_wallet.py, 6, "setting up"&gt;

    def getMessage(self):
        """
        Return the message for this LogRecord.
    
        Return the message for this LogRecord after merging any user-supplied
        arguments with the message.
        """
        msg = str(self.msg)
        if self.args:
&gt;           msg = msg % self.args
E           TypeError: not all arguments converted during string formatting

C:\Program Files\Python310\lib\logging\__init__.py:368: TypeError</error></testcase><testcase classname="Tests.test_welcome" name="test_wel" time="0.001" /><testcase classname="Tests.test_yield_fix" name="test_context_fixture_order" time="0.100" /></testsuite></testsuites>