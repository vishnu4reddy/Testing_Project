on:
  repository_dispatch:
    types: [generic-event]  # Listen for the event type specified in the trigger workflow

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Python (or your environment)
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'  # Use your desired version of Python (or adjust for Node.js, etc.)

      - name: Install dependencies
        run: |
          # Install specific Python dependencies
          python -m venv .venv && 
          . .venv/bin/activate && 
          python -m pip install -U pip
          pip install poetry
          pip install tree
          pwd
          tree
          
      - name: Check if Dockerfile exists and build Docker image
        continue-on-error: true
        run: |
          # # Search for the Dockerfile in the repository
          DOCKERFILE_PATH= "https://github.com/vishnu4reddy/Testing_Project/blob/main/Dockerfile"

          # # Debug: Print the Dockerfile path
          echo "Dockerfile path: $DOCKERFILE_PATH"
        
          # Check if Dockerfile was found
          if [ -z "$DOCKERFILE_PATH" ]; then
            echo "Error: Dockerfile not found!" && exit 1
          else
            echo "Dockerfile found at $DOCKERFILE_PATH"
          fi

          # Log in to Docker Hub using GitHub secrets (ensure you store DOCKER_USERNAME and DOCKER_PASSWORD in GitHub secrets)
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ vars.DOCKER_USERNAME }}" --password-stdin
          
          # Proceed to build the Docker image
          docker build -f "$DOCKERFILE_PATH" -t "${{ vars.DOCKER_USERNAME }}/${{ github.sha }}:latest" .

          # Push the Docker image to Docker Hub
          docker push "${{ vars.DOCKER_USERNAME }}/${{ github.sha }}:latest"
          
          # Optionally, save the image as a tar file if needed
          docker save "${{ vars.DOCKER_USERNAME }}/${{ github.sha }}:latest" -o "${{ github.sha }}.tar"
      - name: Get the commit SHA
        run: |
          echo "SHA: ${{ github.event.client_payload.sha }}"
