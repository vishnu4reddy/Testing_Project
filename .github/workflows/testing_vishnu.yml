on:
  repository_dispatch:
    types: [generic-event]  # Listen for the event type specified in the trigger workflow

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Python (or your environment)
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'  # Use your desired version of Python (or adjust for Node.js, etc.)

      - name: Install dependencies
        run: |
          # Install specific Python dependencies
          python -m venv .venv && 
          . .venv/bin/activate && 
          python -m pip install -U pip
          pip install poetry
          pip install tree
          pwd
          tree
          
      - name: Check if Dockerfile exists and build Docker image
        continue-on-error: true
        run: |
              ls -lh
              DOCKERFILE_PATH="./Dockerfile"
              echo "Dockerfile path: $DOCKERFILE_PATH"
              # Check if Dockerfile exists
              if [ ! -f "$DOCKERFILE_PATH" ]; then
                echo "Error: Dockerfile not found in the current directory!" 
                exit 1
              else
                echo "Dockerfile found at $DOCKERFILE_PATH"
              fi
              # Log in to Docker Hub using GitHub Secrets
              echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ vars.DOCKER_USERNAME }}" --password-stdin
              
              # Get the commit SHA for tagging the image
              COMMIT_SHA="${{ github.sha }}"
              
              # Build the Docker image
              docker build -f "$DOCKERFILE_PATH" -t "${{ vars.DOCKER_USERNAME }}/$COMMIT_SHA:latest" .
              
              # Push the Docker image to Docker Hub
              docker push "${{ vars.DOCKER_USERNAME }}/$COMMIT_SHA:latest"
              
              # Optionally, save the image as a tar file for backup
              docker save "${{ vars.DOCKER_USERNAME }}/$COMMIT_SHA:latest" -o "$COMMIT_SHA.tar"

      - name: Get the commit SHA
        run: |
          echo "SHA: ${{ github.event.client_payload.sha }}"
