name: Playwright Tests in Docker

on:
#   schedule:
#     - cron: '*/2 * * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: choice
        required: True
        options:
          - mira
          - polaris
          - pavo
          - hoku
          
      test_component:
        description: 'Components should run with '
        required: True
        default: ''
        type: choice
        options:
          - acct_mgmt
          - authz
          - notifications
          - support_assistent
          - ups
          - unified
          - sam
          - all
      marker:
        description: 'The pytest marker to filter tests (e.g., "smoke")'
        required: True
        default: ''
        type: choice
        options:
          - all
          - Regression
          - Plv

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}  # Use branch from input or default to current ref

    - name: Set up Docker
      run: |
        docker build -t playwright-test .  # Build the Docker image using the Dockerfile in the repo

    - name: Run tests in Docker container
      run: |
        docker run --rm -v $PWD:/workspace -w /workspace playwright-test bash -c "
          python -m venv venv && \
          source venv/bin/activate && \
          python -m pip install --upgrade pip && \
          pip install poetry && \
          poetry install && \
          cd ${GITHUB_EVENT_INPUTS_TEST_DIRECTORY} && \
          if [ -z \"${INPUT_MARKER}\" ]; then \
            pytest --alluredir=allure-results -vs || true; \
          else \
            pytest -m \"${INPUT_MARKER}\" --alluredir=allure-results -vs || true; \
          fi && \
          chmod -R 777 allure-results
        "
