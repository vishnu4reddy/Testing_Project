name: Playwright Tests in Docker

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: choice
        required: True
        options:
          - mira
          - polaris
          - pavo
          - hoku
          
      test_component:
        description: 'Components to run tests with'
        required: True
        default: 'all'
        type: choice
        options:
          - acct_mgmt
          - authz
          - notifications
          - support_assistent
          - ups
          - unified
          - sam
          - all
          
      marker:
        description: 'The pytest marker to filter tests (e.g., "smoke")'
        required: True
        default: 'all'
        type: choice
        options:
          - all
          - Regression
          - Plv

jobs:
  testing:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      IMAGE_TAG: ghcr.io/${{ github.repository }}:your-tag

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker
        run: |
          # Pull the latest Python Docker image
          docker pull python:latest

      - name: Set environment variable for test component
        run: |
          if [[ "${{ github.event.inputs.test_component }}" == "all" ]]; then
            echo "Running tests for all components except 'all'"
            echo "TEST_COMPONENTS='acct_mgmt,authz,notifications,support_assistent,ups,unified,sam'" >> $GITHUB_ENV
          else
            echo "Running tests for component: ${{ github.event.inputs.test_component }}"
            echo "TEST_COMPONENTS='${{ github.event.inputs.test_component }}'" >> $GITHUB_ENV
          fi

      - name: Set environment variable for marker
        run: |
          if [[ "${{ github.event.inputs.marker }}" == "all" ]]; then
            echo "Running tests with all markers"
            echo "TEST_MARKER='all'" >> $GITHUB_ENV
          else
            echo "Running tests with marker: ${{ github.event.inputs.marker }}"
            echo "TEST_MARKER='${{ github.event.inputs.marker }}'" >> $GITHUB_ENV
          fi

      - name: Set environment variable for environment (e.g., mira, polaris)
        run: |
          echo "Running tests in environment: ${{ github.event.inputs.environment }}"
          echo "ENVIRONMENT='${{ github.event.inputs.environment }}'" >> $GITHUB_ENV

      - name: Run tests
        run: |
          # # If test_component is "all", run for all components except 'all'
          # IFS=',' read -ra COMPONENTS <<< "${{ env.TEST_COMPONENTS }}"
          # for component in "${COMPONENTS[@]}"; do
          #   if [[ "$component" == "notifications" ]]; then
          #     pytest_path="notifications/ui"
          #   else
          #     pytest_path="./tests/${component}/"
          #   fi
            
          #   # If the path exists, run the tests for this component
          #   if [[ -d "$pytest_path" ]]; then
          #     echo "Running pytest on ${pytest_path} with marker ${env.TEST_MARKER} in environment ${env.ENVIRONMENT}"
          #     docker run -e TEST_COMPONENT="${component}" -e TEST_MARKER="${{ env.TEST_MARKER }}" -e ENVIRONMENT="${{ env.ENVIRONMENT }}" python:latest python -m pytest $pytest_path -m "${{ env.TEST_MARKER }}" --env "${{ env.ENVIRONMENT }}"
          #   else
          #     echo "No tests found for component $component in ${pytest_path}"
          #   fi
          # done

      - name: Pull Docker image
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
