name: Playwright Tests in Docker

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: choice
        required: True
        options:
          - mira
          - polaris
          - pavo
          - hoku
          
      test_component:
        description: 'Components should run with'
        required: True
        default: ''
        type: choice
        options:
          - acct_mgmt
          - authz
          - notifications
          - support_assistent
          - ups
          - unified
          - sam
          - all
          
      marker:
        description: 'The pytest marker to filter tests (e.g., "smoke")'
        required: True
        default: ''
        type: choice
        options:
          - all
          - Regression
          - Plv

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
    # env:
    #     REGISTRY: ghcr.io
    #     IMAGE_NAME: ${{ github.repository }}
    #     IMAGE_TAG: ghcr.io/${{ github.repository }}:your-tag
  
      - name: Check out code
        uses: actions/checkout@v2
    
      - name: Set up Docker
        run: |
          # Pull the latest Python Docker image
          docker pull python:latest
    
      - name: Set environment variable for test component
        run: |
          if [[ "${{ github.event.inputs.test_component }}" == "all" ]]; then
            echo "Running tests for all components"
            # export TEST_COMPONENT="acct_mgmt,authz,notifications,support_assistent,ups,unified,sam"
          else
            echo "Running tests for component: ${{ github.event.inputs.test_component }}"
            # export TEST_COMPONENT="${{ github.event.inputs.test_component }}"
          fi
    
      - name: Set environment variable for marker
        run: |
          if [[ "${{ github.event.inputs.marker }}" == "all" ]]; then
            echo "Running tests with all markers"
            # export TEST_MARKER="all"
          else
            echo "Running tests with marker: ${{ github.event.inputs.marker }}"
            # export TEST_MARKER="${{ github.event.inputs.marker }}"
          fi
    
      - name: Run tests
        run: |
          # Run tests inside the container
            echo "Running the tests"
          # docker run -e TEST_COMPONENT="${TEST_COMPONENT}" -e TEST_MARKER="${TEST_MARKER}" python:latest python -m pytest
      - name: Pull Docker image
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
