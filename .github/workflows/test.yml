name: Test Automation Image

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: choice
        required: True
        options:
          - mira
          - polaris
          - pavo
          - hoku
      test_component:
        description: 'Components to run tests with'
        required: True
        default: 'all'
        type: choice
        options:
          - acct_mgmt
          - authz
          - notifications
          - support_assistent
          - ups
          - unified
          - sam
          - all
      marker:
        description: 'The pytest marker to filter tests (e.g., "Plv")'
        required: True
        default: 'all'
        type: choice
        options:
          - all
          - Regression
          - Plv

env:
  image_registry: quay.io
  quay_username: ${{ secrets.CCS_QUAY_CCSPORTAL_BUILDER }}
  quay_password: ${{ secrets.CCS_QUAY_CCSPORTAL_BUILDER_PASSWORD }}
  image_name: auto-login-functionals
  version: "2.0"

jobs:
  Trigger_Manual_Dev_Build:
    runs-on: ubuntu-latest
    name: Trigger Manual Dev Build Workflow
    steps:
      - name: Trigger Manual Dev Build with Current Branch
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            -d '{"ref": "${{ github.ref }}"}' \
            https://api.github.com/repos/<owner>/<repo>/actions/workflows/manual_dev_build.yml/dispatches

  Docker_Image_Pull:
    needs: Trigger_Manual_Dev_Build
    runs-on: ubuntu-latest
    name: Pull the Docker Image
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Docker Login (if needed)
        run: |
          echo ${{ secrets.CCS_QUAY_CCSPORTAL_BUILDER_PASSWORD }} | docker login quay.io -u ${{ secrets.CCS_QUAY_CCSPORTAL_BUILDER }} --password-stdin

      - name: Pull Docker Image
        run: |
          docker pull ${{ env.image_registry }}/${{ env.image_name }}:${{ github.sha }}

  Run_Tests_In_Container:
    needs: Docker_Image_Pull
    runs-on: ubuntu-latest
    name: Run Automation Tests in Docker Container
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Run Tests in Docker Container
        run: |
          # Run the tests using the pulled Docker image
          docker run --rm \
            -e ENVIRONMENT=${{ github.event.inputs.environment }} \
            -e TEST_COMPONENT=${{ github.event.inputs.test_component }} \
            -e MARKER=${{ github.event.inputs.marker }} \
            ${{ env.image_registry }}/${{ env.image_name }}:${{ github.sha }} \
            pytest --marker ${{ github.event.inputs.marker }} --component ${{ github.event.inputs.test_component }} --env ${{ github.event.inputs.environment }}
